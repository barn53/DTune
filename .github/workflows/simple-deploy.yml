name: Deploy SVG Editor

on:
  push:
    branches: [ release ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install build tools
        run: npm install -g html-minifier-terser terser clean-css-cli

      - name: Build single-file app
        run: |
          mkdir build

          # Combine all JavaScript files
          cat js/*.js > build/combined.js

          # Minify everything
          clean-css-cli styles.css -o build/styles.min.css
          terser build/combined.js -c -m -o build/app.min.js

          # Create final HTML with everything inline
          cp index.html build/index.html

          # Replace CSS link with inline styles
          CSS=$(cat build/styles.min.css)
          sed -i 's|<link rel="stylesheet" href="styles.css">|<style>'"$CSS"'</style>|' build/index.html

          # Remove JS script tags and add inline script
          sed -i '/<script src="js\//d' build/index.html
          JS=$(cat build/app.min.js)
          sed -i 's|</body>|<script>'"$JS"'</script></body>|' build/index.html

          # Convert SVG icons to data URLs
          for icon in icons/*.svg; do
            name=$(basename "$icon")
            data="data:image/svg+xml;base64,$(base64 -w 0 < "$icon")"
            sed -i "s|icons/$name|$data|g" build/index.html
          done

          # Final HTML minification
          html-minifier-terser build/index.html \
            --collapse-whitespace \
            --remove-comments \
            --minify-css \
            --minify-js \
            -o build/final.html

          mv build/final.html build/index.html

          # Clean up temp files
          rm build/combined.js build/app.min.js build/styles.min.css

          echo "âœ… Built single-file app: $(du -h build/index.html | cut -f1)"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
