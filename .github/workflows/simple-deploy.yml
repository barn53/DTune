name: Deploy SVG Editor

on:
  push:
    branches: [ release ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pages: write
      id-token: write

    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install build tools
        run: npm install html-minifier-terser terser clean-css-cli

      - name: Build single-file app
        run: |
          mkdir build

          # Combine all JavaScript files
          cat js/*.js > build/combined.js

          # Minify everything using npx (more reliable)
          npx clean-css-cli styles.css -o build/styles.min.css
          npx terser build/combined.js -c -m -o build/app.min.js

          # Get git info for version tracking
          GIT_HASH=$(git rev-parse --short HEAD)
          GIT_BRANCH=$(git rev-parse --abbrev-ref HEAD)
          BUILD_DATE=$(date -u '+%Y-%m-%d %H:%M:%S UTC')

          # Create final HTML with everything inline using Node.js (bulletproof)
          node -e "
          const fs = require('fs');
          let html = fs.readFileSync('index.html', 'utf8');
          const css = fs.readFileSync('build/styles.min.css', 'utf8');
          let js = fs.readFileSync('build/app.min.js', 'utf8');

          // Inject build info into JavaScript
          const buildInfo = {
            gitHash: '${GIT_HASH}',
            gitBranch: '${GIT_BRANCH}',
            buildDate: '${BUILD_DATE}',
            version: '$(date +%Y%m%d)-${GIT_HASH}'
          };
          
          // Add build info as global variable at the start of JS
          js = 'window.BUILD_INFO = ' + JSON.stringify(buildInfo, null, 2) + ';\\n\\n' + js;

          // Replace CSS link with inline styles
          html = html.replace('<link rel=\"stylesheet\" href=\"styles.css\">', '<style>' + css + '</style>');

          // Remove JS script tags and add inline script
          html = html.replace(/<script src=\"js\/[^\"]*\"><\/script>/g, '');
          html = html.replace('</body>', '<script>' + js + '</script></body>');

          fs.writeFileSync('build/index.html', html);
          "

          echo "üè∑Ô∏è  Build info: ${GIT_HASH} from ${GIT_BRANCH} at ${BUILD_DATE}"

          # Convert SVG icons to data URLs
          for icon in icons/*.svg; do
            name=$(basename "$icon")
            data="data:image/svg+xml;base64,$(base64 -w 0 < "$icon")"
            sed -i "s|icons/$name|$data|g" build/index.html
          done

          # Final HTML minification
          npx html-minifier-terser build/index.html \
            --collapse-whitespace \
            --remove-comments \
            --minify-css \
            --minify-js \
            -o build/final.html

          mv build/final.html build/index.html

          # Clean up temp files
          rm build/combined.js build/app.min.js build/styles.min.css

          echo "‚úÖ Built single-file app: $(du -h build/index.html | cut -f1)"

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./build

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
