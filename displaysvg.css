/* Display SVG Styles - Visual normalization and interaction for SVG display clone */

/* SVG Container and Wrapper */
.svg-container {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    width: 100vw;
    height: 100vh;
    background: transparent !important;
    overflow: hidden;
}

.svg-wrapper {
    position: relative;
    width: 100%;
    height: 100%;
    overflow: hidden;
    cursor: default;
}

.svg-wrapper.dragging {
    cursor: grabbing;
}

.svg-wrapper.trackpad-panning {
    cursor: grab;
}
.svg-content {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    display: block;
    transform-origin: 0 0;
    /* Scaling from SVG origin */
    z-index: 1;
    /* Lower z-index so grid can overlay */
}

.svg-content svg {
    max-width: 100%;
    max-height: 100%;
    user-select: none;
    background: transparent !important;
    fill: none !important;
}

/* Base SVG Element Styles */
.svg-content svg path,
.svg-content svg circle,
.svg-content svg rect,
.svg-content svg ellipse,
.svg-content svg line,
.svg-content svg polyline,
.svg-content svg polygon,
.svg-content svg text,
.svg-content svg tspan,
.svg-content svg textPath {
    transition: all 0.3s ease !important;
    pointer-events: none;
}

/* Override pointer-events for overlay elements */
.svg-content svg .no-export {
    pointer-events: all !important;
}

:root {
    --normalized-color: #444;
    --normalized-stroke-width: 2px;

    --hover-color: #1E90FF;
    --hover-stroke-width: 2.5px;
    --hover-glow: rgba(30,144,255,0.4);

    --selected-color: #FF9500;
    --selected-stroke-width: 2.5px;
    --selected-glow: rgba(255,149,0,0.6);

    --overlay-stroke: rgba(85, 85, 85, 0.01);
    --overlay-stroke-width: 10px;
}

/* Normalized Path Styles - Applied by normalizePathVisuals() */
.svg-content svg .normalized-path {
    stroke: var(--normalized-color) !important;
    stroke-width: var(--normalized-stroke-width) !important;
    transition: stroke 0.2s ease, stroke-width 0.2s ease, filter 0.2s ease;
    stroke-dasharray: none !important;
    stroke-linecap: round !important;
    stroke-linejoin: round !important;
    vector-effect: non-scaling-stroke !important;
}

/* Closed paths and shapes get subtle fill for shape recognition */
.svg-content svg .normalized-path.is-closed-path,
.svg-content svg .normalized-text.is-closed-path {
    fill: rgba(85, 85, 85, 0.1) !important;
}

/* Open line elements keep transparent fill */
.svg-content svg .normalized-path:not(.is-closed-path) {
    fill: none !important;
}

/* Text elements get dark grey stroke outline like other elements */
.svg-content svg text.normalized-text,
.svg-content svg tspan.normalized-text,
.svg-content svg textPath.normalized-text {
    fill: var(--normalized-color) !important;
    stroke: var(--normalized-color) !important;
    stroke-width: var(--normalized-stroke-width) !important;
        stroke-dasharray: none !important;
        stroke-linecap: round !important;
        stroke-linejoin: round !important;
        vector-effect: non-scaling-stroke !important;
}

/* Interactive Overlay Styles */
.svg-content svg .path-overlay {
    fill: transparent !important;
    stroke: var(--overlay-stroke) !important;
    stroke-width: var(--overlay-stroke-width) !important;
    vector-effect: non-scaling-stroke !important;
    pointer-events: all !important;
    cursor: pointer;
}

/* Text overlay needs special handling for hit area */
.svg-content svg text.path-overlay {
    fill: transparent !important;
    stroke: var(--overlay-stroke) !important;
    stroke-width: var(--overlay-stroke-width) !important;
    vector-effect: non-scaling-stroke !important;
    pointer-events: all !important;
    cursor: pointer;
    /* Text overlays need stroke to create hit area since text fill becomes transparent */
}

/* Hover State Styles */
.svg-content svg .normalized-path.hover-active,
.svg-content svg text.hover-active,
.svg-content svg tspan.hover-active,
.svg-content svg textPath.hover-active {
    stroke: var(--hover-color) !important;
    stroke-width: var(--hover-stroke-width) !important;
    filter: drop-shadow(0 0 4px var(--hover-glow));
}

/* Selected Element Styles */
.svg-content svg .normalized-path.path-selected,
.svg-content svg text.path-selected,
.svg-content svg tspan.path-selected,
.svg-content svg textPath.path-selected {
    stroke: var(--selected-color) !important;
    stroke-width: var(--selected-stroke-width) !important;
    filter: drop-shadow(0 0 6px var(--selected-glow));
}

/*
stroke-dasharray: 10 !important;
animation: dashmove 1s linear infinite;
@keyframes dashmove {
    to {
        stroke-dashoffset: -20;
    }
}
*/

/* SVG Boundary Outline */
.svg-boundary-outline {
    --stroke-width: 5;
    fill: none !important;
    stroke: rgba(50, 146, 205, 0.3) !important;
        stroke-width: calc(var(--stroke-width) * 1px) !important;
        stroke-dasharray: 10px, 20px !important;
    pointer-events: none !important;
    vector-effect: non-scaling-stroke !important;
    transition: stroke 0.2s ease !important;
}

.svg-boundary-outline.boundary-highlight {
        stroke-width: calc(var(--stroke-width) * 1px) !important;
}

/* Boundary overlay - visible wider hit area for boundary interaction */
.boundary-overlay {
    fill: transparent !important;
    fill-rule: evenodd !important;
    cursor: pointer !important;
    pointer-events: all !important;
    stroke: transparent !important;
    stroke-width: 10px !important;
    vector-effect: non-scaling-stroke !important;
}

/* Grid Overlay System */
.gutter-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    pointer-events: none;
    background-image:
        linear-gradient(rgba(192, 192, 192, 0.4) 1px, transparent 1px),
        linear-gradient(90deg, rgba(192, 192, 192, 0.4) 1px, transparent 1px);
    background-size: 10px 10px;
    z-index: 500;
    /* High enough to overlay SVG content */
}

.gutter-intersection {
    border-radius: 1px;
    box-sizing: border-box;
}

/* Responsive adjustments for SVG display */
@media (max-width: 768px) {
    .svg-container {
        height: 50vh;
    }
}